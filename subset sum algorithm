#include <iostream>
#include <vector>
using namespace std;
#include <numeric>

const int W = 11; 

vector<int> w = {1, 2, 3, 4, 5, 6}; 
vector<string> include(w.size());  

bool promising(int i, int weight, int total) {
    return (weight + total >= W) && (weight== W || weight + w[i+1] <= W); 
}

void sum_of_subsets(int i, int weight, int total) {
    if (promising(i, weight, total)) {  
        if (weight == W) {
            cout << "Subset: ";
            for (int j = 0; j <= i; j++) { 
                if (include[j] == "yes") {
                    cout << w[j] << " ";
                }
            }
            cout << endl;
        }
        else {
            
            include[i + 1] = "yes"; 
            sum_of_subsets(i + 1, weight + w[i + 1], total - w[i + 1]);
            
            
            include[i + 1] = "no"; 
            sum_of_subsets(i + 1, weight, total - w[i + 1]); 
        }
    }
}
int main() {
    int total = accumulate(w.begin(), w.end(), 0);
    sum_of_subsets(0, 0, total);
    return 0;
}
